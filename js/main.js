const verseEl = document.getElementById('dailyVerse');
const speakBtn = document.getElementById('speakVerseBtn');
const themeToggle = document.getElementById('themeToggle');

// –ó–∞–≥—Ä—É–∑–∫–∞ –ë–∏–±–ª–∏–∏ –∏ –≤—ã–±–æ—Ä —Å—Ç–∏—Ö–∞ –¥–Ω—è
fetch('data/bible.json')
  .then(res => res.json())
  .then(data => {
    const allVerses = [];
    data.Books.forEach(book => {
      book.Chapters.forEach(chapter => {
        chapter.Verses.forEach(verse => {
          allVerses.push(`${book.BookName} ${chapter.ChapterId}:${verse.VerseId} ‚Äî ${verse.Text}`);
        });
      });
    });

    const randomIndex = Math.floor(Math.random() * allVerses.length);
    verseEl.textContent = allVerses[randomIndex];
  })
  .catch(err => {
    verseEl.textContent = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∏—Ö üò¢';
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ bible.json:', err);
  });

// –û–∑–≤—É—á–∫–∞ —Å—Ç–∏—Ö–∞
if (speakBtn) {
  speakBtn.addEventListener('click', () => {
    const utterance = new SpeechSynthesisUtterance(verseEl.textContent);
    utterance.lang = 'ru-RU';
    speechSynthesis.speak(utterance);
  });
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
if (themeToggle) {
  themeToggle.addEventListener('click', () => {
    document.body.classList.toggle('dark');
    const isDark = document.body.classList.contains('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  });

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π —Ç–µ–º—ã
  const savedTheme = localStorage.getItem('theme');
  if (savedTheme === 'dark') {
    document.body.classList.add('dark');
  }
}
