const verseEl = document.getElementById('dailyVerse');
const speakBtn = document.getElementById('speakVerseBtn');
const refreshBtn = document.getElementById('refreshVerseBtn');
const shareBtn = document.getElementById('shareVerseBtn');
const themeToggle = document.getElementById('themeToggle');
const dateEl = document.getElementById('currentDate');
const dailyDate = document.getElementById('dailyDate');
let allVerses = [];

function updateDailyDate() {
  if (!dailyDate) return;
  const today = new Date();
  const options = { year: 'numeric', month: 'long', day: 'numeric' };
  dailyDate.textContent = `–°–µ–≥–æ–¥–Ω—è ‚Äî ${today.toLocaleDateString('ru-RU', options)}`;
}

function displayRandomVerse() {
  if (allVerses.length === 0) {
    verseEl.textContent = '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç–∏—Ö–æ–≤.';
    return;
  }
  const randomIndex = Math.floor(Math.random() * allVerses.length);
  const selected = allVerses[randomIndex];
  verseEl.textContent = `${selected.ref} ‚Äî ${selected.text}`;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª–Ω–æ–π –ë–∏–±–ª–∏–∏
fetch('data/bible.json')
  .then(res => res.json())
  .then(data => {
    if (!data.Books) throw new Error('–ù–µ—Ç –ø–æ–ª—è Books');

    data.Books.forEach(book => {
      if (!book.Chapters) return;
      book.Chapters.forEach(chapter => {
        if (!chapter.Verses) return;
        chapter.Verses.forEach(verse => {
          allVerses.push({
            ref: `${book.BookName} ${chapter.ChapterId}:${verse.VerseId}`,
            text: verse.Text
          });
        });
      });
    });

    displayRandomVerse();
  })
  .catch(err => {
    verseEl.textContent = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∏—Ö üò¢';
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ bible.json:', err);
  });

// –û–∑–≤—É—á–∫–∞ —Å—Ç–∏—Ö–∞
if (speakBtn) {
  speakBtn.addEventListener('click', () => {
    speechSynthesis.cancel();
    const utterance = new SpeechSynthesisUtterance(verseEl.textContent);
    utterance.lang = 'ru-RU';
    speechSynthesis.speak(utterance);
  });
}

// –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∏—Ö
if (refreshBtn) {
  refreshBtn.addEventListener('click', () => {
    speechSynthesis.cancel();
    displayRandomVerse();
    updateDailyDate();
  });
}

// –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
if (shareBtn) {
  shareBtn.addEventListener('click', () => {
    const verseText = verseEl.textContent;
    const encoded = encodeURIComponent(verseText);
    const choice = prompt('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑:\n1 ‚Äî WhatsApp\n2 ‚Äî Telegram');
    if (choice === '1') {
      window.open(`https://api.whatsapp.com/send?text=${encoded}`, '_blank');
    } else if (choice === '2') {
      window.open(`https://t.me/share/url?url=&text=${encoded}`, '_blank');
    } else {
      alert('–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.');
    }
  });
}

// –°–º–µ–Ω–∞ —Ç–µ–º—ã
if (themeToggle) {
  themeToggle.addEventListener('click', () => {
    document.body.classList.toggle('dark');
    localStorage.setItem('theme', document.body.classList.contains('dark') ? 'dark' : 'light');
  });

  if (localStorage.getItem('theme') === 'dark') {
    document.body.classList.add('dark');
  }
}

// –ó–∞—Å—Ç–∞–≤–∫–∞ + –¥–∞—Ç–∞
window.addEvent
